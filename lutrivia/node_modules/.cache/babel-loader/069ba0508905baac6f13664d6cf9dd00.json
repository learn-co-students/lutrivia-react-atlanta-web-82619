{"ast":null,"code":"var _jsxFileName = \"/Users/alexandriapugia/Development/code/lutrivia-react-atlanta-web-82619/lutrivia/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport GameBox from './components/GameBox';\nimport Submit from './components/Submit';\nimport data from './data';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleNewGameButton = () => {\n      console.log('new game');\n    };\n\n    this.handleButtonClick = (e, answer) => {\n      if (e.target.value === answer.toString()) {\n        this.setState({\n          score: this.state.score + 1\n        });\n        e.target.style.backgroundColor = 'green';\n      } else {\n        e.target.style.backgroundColor = 'red';\n      }\n    };\n\n    this.submitScoreButton = e => {\n      e.preventDefault();\n      console.log(\"submitted\");\n    };\n\n    this.state = {\n      score: 0,\n      name: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      handleNewGameButton: this.handleNewGameButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(GameBox, {\n      questions: data.questions,\n      handleButtonClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Submit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexandriapugia/Development/code/lutrivia-react-atlanta-web-82619/lutrivia/src/App.js"],"names":["React","Component","Header","GameBox","Submit","data","App","constructor","handleNewGameButton","console","log","handleButtonClick","e","answer","target","value","toString","setState","score","state","style","backgroundColor","submitScoreButton","preventDefault","name","render","questions"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,mBATc,GASQ,MAAM;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAXa;;AAAA,SAadC,iBAbc,GAaM,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACjC,UAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmBF,MAAM,CAACG,QAAP,EAAvB,EAA0C;AACxC,aAAKC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AADd,SAAd;AAGAN,QAAAA,CAAC,CAACE,MAAF,CAASM,KAAT,CAAeC,eAAf,GAAiC,OAAjC;AACD,OALD,MAKO;AACLT,QAAAA,CAAC,CAACE,MAAF,CAASM,KAAT,CAAeC,eAAf,GAAiC,KAAjC;AACD;AACF,KAtBa;;AAAA,SAwBdC,iBAxBc,GAwBOV,CAAD,IAAO;AACzBA,MAAAA,CAAC,CAACW,cAAF;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KA5Ba;;AAGZ,SAAKS,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,CADI;AAEXM,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAuBDC,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWD,KAA1B;AAAiC,MAAA,mBAAmB,EAAE,KAAKV,mBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEH,IAAI,CAACqB,SAAzB;AAAoC,MAAA,iBAAiB,EAAE,KAAKf,iBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAvCyB;;AA0C5B,eAAeL,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Header from './components/Header'\nimport GameBox from './components/GameBox'\nimport Submit from './components/Submit'\nimport data from './data'\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      score: 0,\n      name: ''\n    }\n  }\n\n  handleNewGameButton = () => {\n    console.log('new game')\n  }\n\n  handleButtonClick = (e, answer) => {\n    if (e.target.value === answer.toString()) {\n      this.setState({\n        score: this.state.score + 1\n      })\n      e.target.style.backgroundColor = 'green'\n    } else {\n      e.target.style.backgroundColor = 'red'\n    }\n  }\n\n  submitScoreButton = (e) => {\n    e.preventDefault()\n    \n    console.log(\"submitted\")\n  }\n\n  render () {\n    return (\n      <div>\n        <Header score={this.state.score} handleNewGameButton={this.handleNewGameButton}/>\n        <GameBox questions={data.questions} handleButtonClick={this.handleButtonClick}/>\n        <Submit />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}